buildscript {
    repositories {
        mavenLocal()
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.9.15'
group = 'com.alan19.astral' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'astral'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: "snapshot", version: "20210309-1.16.5"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                astral {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                astral {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")
            environment 'target', 'fmluserdevdata'
            properties 'fml.earlyprogresswindow': 'false'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--all', '--output', file('src/generated/resources/'),
                    '--mod', 'astral', '--reports',
                    '--existing', sourceSets.main.resources.srcDirs[0]
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs = [
                    "$rootDir/src/main/resources",
                    "$rootDir/src/generated/resources"
            ]
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.46'
    compile fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    compile fg.deobf("xyz.brassgoggledcoders:PatchouliProvider:1.16.4-1.0.2-Snapshot.3")
    compile fg.deobf("vazkii.botania:Botania:1.16.5-416")
    compile fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.1")
    implementation fg.deobf("curse.maven:shutup-experimental-settings-407174:3188120")
}

// I believe this is for using datagens with forge tags
project.afterEvaluate {
    minecraft.runs.data.args('--existing', configurations.minecraft.asPath.split(":").toList().find { it.contains("forge") }.split(";")[0])
}

repositories {
    mavenLocal()
    maven {
        // for AutoRegLib
        name "blamejared"
        url "http://maven.blamejared.com/"
    }
    maven {
        // for JEI
        name "progwml6"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "brassgoggledcoders"
        url "https://maven.teamacronymcoders.com/"
    }
    //Gradle
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        url = "https://www.cursemaven.com"
    }
}


jar {
    manifest {
        attributes([
                "Specification-Title"     : "astral",
                "Specification-Vendor"    : "minerarcana",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "minerarcana",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}